Create MasterAdminPanel/backend/.env with:
PORT=4000
MONGO_URI=<your Atlas connection string>
JWT_SECRET=<long-random-secret>
CORS_ORIGIN=http://localhost:5173
SUPERADMIN_USER=<superadmin-username>
SUPERADMIN_PASS=<superadmin-password>
In MasterAdminPanel/backend: npm i then npm run dev



I want to create a full-stack Admin Panel platform with the following setup:

ðŸ”¹ Core Idea:
A SuperAdmin has full access to the system. The SuperAdmin can create new Admins. 
Each time a new Admin is created:
- A new MongoDB database is created dynamically (for isolation per admin).
- The admin gets unique credentials (username + password).
- The credentials are stored in a master "superadmin_db" in the "admins" collection.
- That Admin can log in using those credentials and access only their own database.
This is a multi-tenant architecture with database isolation per tenant.

ðŸ”¹ Stack:
- Frontend: React (Vite preferred)
- Backend: Node.js (Express)
- Database: MongoDB Atlas
- ORM: Mongoose
- Auth: JWT-based authentication
- Hosting: Vercel (frontend), Render or Railway (backend)

ðŸ”¹ Required Features:
1. SuperAdmin Dashboard:
   - Login for SuperAdmin.
   - Create, delete, or manage Admins.
   - Auto-generate new DB and user credentials when creating new Admins.
2. Admin Dashboard:
   - Admin login (using their credentials from master DB).
   - Dynamic MongoDB connection based on their credentials.
   - CRUD operations for their own data (like users, payments, settings, etc.).
3. Security:
   - JWT tokens for login sessions.
   - Bcrypt password hashing.
   - Environment variables for secrets and DB URIs.
4. Backend Logic:
   - Dynamic Mongoose connection per admin.
   - Function to create new databases in MongoDB Atlas programmatically.
   - API endpoints:
     - /superadmin/login
     - /superadmin/create-admin
     - /admin/login
     - /admin/data (CRUD)
5. Folder Structure:
   - Organized React frontend and Node backend structure.
   - Separate .env for frontend and backend.
6. Optional:
   - Auto email to Admin with credentials when created.
   - Multi-theme dashboard (dark/light).

ðŸ”¹ Output I Want:
- A **complete folder structure** (frontend + backend).
- **Code snippets** for all key features (auth, DB creation, routes, etc.).
- A **detailed explanation** of how it works.
- Optionally, a **DOCX or PDF file** explaining the full architecture and setup instructions.

The project name: **MasterAdminPanel**

Now generate the **full project setup (React + Node + MongoDB)** with clean code, best practices, and explanation.
